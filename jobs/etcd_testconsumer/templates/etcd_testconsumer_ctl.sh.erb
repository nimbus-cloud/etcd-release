#!/bin/bash -exu

SCRIPT_NAME=$(basename ${0})
RUN_DIR=/var/vcap/sys/run/etcd_testconsumer
LOG_DIR=/var/vcap/sys/log/etcd_testconsumer
PKG_DIR=/var/vcap/packages/testconsumer
PIDFILE=${RUN_DIR}/etcd_testconsumer.pid
CERT_DIR=/var/vcap/jobs/etcd_testconsumer/config/certs

exec > >(tee -a >(logger -p user.info -t vcap.${SCRIPT_NAME}.stdout) | awk -W interactive '{lineWithDate="echo [`date +\"%Y-%m-%d %H:%M:%S%z\"`] \"" $0 "\""; system(lineWithDate)  }' >> ${LOG_DIR}/${SCRIPT_NAME}.log)
exec 2> >(tee -a >(logger -p user.error -t vcap.${SCRIPT_NAME}.stderr) | awk -W interactive '{lineWithDate="echo [`date +\"%Y-%m-%d %H:%M:%S%z\"`] \"" $0 "\""; system(lineWithDate)  }' >> ${LOG_DIR}/${SCRIPT_NAME}.err.log)

function main() {
  case "${1}" in
    "start")
      local protocol
      protocol="http://"

      local tls_flags
      tls_flags=""

      <% if p("etcd_testconsumer.etcd.require_ssl") %>
        set +e
        /var/vcap/packages/etcd-dns-checker/bin/check-a-record <%= p("etcd_testconsumer.etcd.dns_health_check_host") %>
        if [ "0" != "$?" ]; then
          echo "DNS is not up"
          exit 1
        fi
        set -e
      <% end %>

      <% if p("etcd_testconsumer.etcd.require_ssl") %>
      echo -n '<%= p("etcd_testconsumer.etcd.ca_cert") %>' > ${CERT_DIR}/ca.crt
      echo -n '<%= p("etcd_testconsumer.etcd.client_cert") %>' > ${CERT_DIR}/client.crt
      echo -n '<%= p("etcd_testconsumer.etcd.client_key") %>' > ${CERT_DIR}/client.key

      protocol="https://"
      tls_flags="\
      --ca-cert-file ${CERT_DIR}/ca.crt \
      --client-ssl-cert-file ${CERT_DIR}/client.crt \
      --client-ssl-key-file ${CERT_DIR}/client.key"
      <% end %>

      local addresses
      addresses=""

      <% p("etcd_testconsumer.etcd.machines").each do |machine| %>
        addresses="${addresses} --etcd-service ${protocol}<%= machine %>:4001"
      <% end %>

      "${PKG_DIR}/bin/testconsumer" --port 6769 \
        ${addresses} \
        ${tls_flags} \
        2> >(tee -a ${LOG_DIR}/etcd_testconsumer.stderr.log | logger -p user.error -t vcap.etcd_testconsumer) \
        1> >(tee -a ${LOG_DIR}/etcd_testconsumer.stdout.log | logger -p user.info  -t vcap.etcd_testconsumer) &

      echo "${!}" > "${PIDFILE}"
      ;;

    "stop")
      local pid
      pid="$(cat "${PIDFILE}")"

      kill -9 "${pid}"
      rm "${PIDFILE}"
      ;;

    *)
      echo "Usage: $0 {start|stop}"
      ;;

  esac
}

main ${@}
